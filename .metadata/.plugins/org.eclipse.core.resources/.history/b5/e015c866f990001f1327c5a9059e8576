ppackage controlador;

import java.io.IOException;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import Dao.ClassEstadohabitacionImp;
import Dao.ClassHabitacionImp;
import Dao.ClassTipohabitacionImp;
import Dao.EstadohabitacionDAO;
import Dao.TipohabitacionDAO;
import model.Estadohabitacion;
import model.Habitacion;
import model.Tipohabitacion;

@WebServlet("/ControladorHabitacion")
public class ControladorHabitacion extends HttpServlet {
    private static final long serialVersionUID = 1L;

    private ClassHabitacionImp habitacionDAO = new ClassHabitacionImp();
    private TipohabitacionDAO tipoHabitacionDAO = new ClassTipohabitacionImp();
    private EstadohabitacionDAO estadoHabitacionDAO = new ClassEstadohabitacionImp();

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String accion = request.getParameter("accion");

        if (accion != null) {
            switch (accion) {
                case "Actualizar":
                    cargarFormularioActualizacion(request, response);
                    break;
                case "Eliminar":
                    eliminarHabitacion(request, response);
                    break;
                case "Listar":
                    listarHabitaciones(request, response);
                    break;
                default:
                    listarHabitaciones(request, response);
                    break;
            }
        } else {
            cargarFormularioRegistro(request, response);
        }
    }

    private void cargarFormularioActualizacion(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int id = Integer.parseInt(request.getParameter("id"));
        Habitacion habitacion = new Habitacion();
        habitacion.setID_Habitacion(id);
        Habitacion buscarId = habitacionDAO.BuscarHabitacion(habitacion);

        request.setAttribute("id", buscarId.getID_Habitacion());
        request.setAttribute("precio", buscarId.getPrecio());
        request.setAttribute("comodidades", buscarId.getComodidades());
        request.setAttribute("tipoHabitacion", buscarId.getTipohabitacion().getIdTipo());
        request.setAttribute("estadoHabitacion", buscarId.getEstadohabitacion().getIdEstado());

        List<Tipohabitacion> listaTiposHabitacion = tipoHabitacionDAO.findAll();
        List<Estadohabitacion> listaEstadosHabitacion = estadoHabitacionDAO.findAll();

        request.setAttribute("listaTiposHabitacion", listaTiposHabitacion);
        request.setAttribute("listaEstadosHabitacion", listaEstadosHabitacion);

        request.getRequestDispatcher("/ActualizarHabitacion.jsp").forward(request, response);
    }

    private void eliminarHabitacion(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int idEliminar = Integer.parseInt(request.getParameter("id"));
        Habitacion habitacion = new Habitacion();
        habitacion.setID_Habitacion(idEliminar);
        habitacionDAO.EliminarHabitacion(habitacion);

        listarHabitaciones(request, response);
    }

    private void listarHabitaciones(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        List<Habitacion> listadoHabitacion = habitacionDAO.listaHabitacion();
        request.setAttribute("listadoHabitaciones", listadoHabitacion);
        request.getRequestDispatcher("/ListadoHabitaciones.jsp").forward(request, response);
    }

    private void cargarFormularioRegistro(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        List<Tipohabitacion> listaTiposHabitacion = tipoHabitacionDAO.findAll();
        List<Estadohabitacion> listaEstadosHabitacion = estadoHabitacionDAO.findAll();

        request.setAttribute("listaTiposHabitacion", listaTiposHabitacion);
        request.setAttribute("listaEstadosHabitacion", listaEstadosHabitacion);

        request.getRequestDispatcher("/FormularioRegistroHabitacion.jsp").forward(request, response);
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String accion = request.getParameter("accion");

        if ("Actualizar".equals(accion)) {
            // Proceso de actualización de la habitación
            int id = Integer.parseInt(request.getParameter("id"));
            String idTipoStr = request.getParameter("idtipo");
            String precioStr = request.getParameter("precio");
            String comodidades = request.getParameter("comodidades");
            String idEstadoStr = request.getParameter("estadoHabitacion");

            int idTipo = Integer.parseInt(idTipoStr);
            double precio = Double.parseDouble(precioStr);
            int idEstado = Integer.parseInt(idEstadoStr);

            // Obtener el tipo de habitación y estado
            Tipohabitacion tipohabitacion = tipoHabitacionDAO.findTipohabitacionById(idTipo);
            Estadohabitacion estadohabitacion = estadoHabitacionDAO.findEstadohabitacionById(idEstado);

            // Buscar la habitación existente y actualizar sus atributos
            Habitacion habitacion = new Habitacion();
            habitacion.setID_Habitacion(id);
            habitacion.setTipohabitacion(tipohabitacion);
            habitacion.setEstadohabitacion(estadohabitacion);
            habitacion.setPrecio(precio);
            habitacion.setComodidades(comodidades);

            // Llamar al método de actualización del DAO
            habitacionDAO.ActualizarHabitacion(habitacion);

            // Redirigir a la lista de habitaciones
            listarHabitaciones(request, response);
        } else {
            // Procesar otras acciones (registro, etc.)
            super.doPost(request, response);
        }
    }
}
