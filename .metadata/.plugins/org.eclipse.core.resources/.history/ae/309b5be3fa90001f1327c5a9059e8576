public class ClassEstadohabitacionImp implements EstadohabitacionDAO {

    private EntityManager em;

    public ClassEstadohabitacionImp() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProyectoGestionHotelera");
        em = emf.createEntityManager();
    }

    @Override
    public List<Estadohabitacion> listaEstadoHabitacion() {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProyectoGestionHotelera");
        EntityManager emanager = emf.createEntityManager();
        emanager.getTransaction().begin();
        List<Estadohabitacion> listadoestadohabitacion = emanager
                .createQuery("SELECT e FROM Estadohabitacion e", Estadohabitacion.class)
                .getResultList();
        emanager.getTransaction().commit();
        emanager.close();
        return listadoestadohabitacion;
    }

    @Override
    public Estadohabitacion findEstadohabitacionById(int id) {
        return em.find(Estadohabitacion.class, id);
    }
}

protected void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    String accion = request.getParameter("accion");

    if (accion != null) {
        switch (accion) {
            case "Actualizar":
                actualizarHabitacion(request, response);
                break;
            case "Eliminar":
                eliminarHabitacion(request, response);
                break;
            case "Listar":
                listarHabitaciones(request, response);
                break;
            default:
                listarHabitaciones(request, response);
                break;
        }
    } else {
        cargarFormularioRegistro(request, response);
    }
}

private void actualizarHabitacion(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    int id = Integer.parseInt(request.getParameter("id"));
    Habitacion hab = new Habitacion();
    hab.setID_Habitacion(id);
    Habitacion buscarId = habitacionDAO.BuscarHabitacion(hab);

    request.setAttribute("id", buscarId.getID_Habitacion());
    request.setAttribute("precio", buscarId.getPrecio());
    request.setAttribute("comodidades", buscarId.getComodidades());

    request.getRequestDispatcher("/ActualizarHabitacion.jsp").forward(request, response);
}

private void eliminarHabitacion(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    int idEliminar = Integer.parseInt(request.getParameter("id"));
    Habitacion hab = new Habitacion();
    hab.setID_Habitacion(idEliminar);
    habitacionDAO.EliminarHabitacion(hab);

    listarHabitaciones(request, response);
}

private void listarHabitaciones(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    List<Habitacion> listadoHabitacion = habitacionDAO.listaHabitacion();
    request.setAttribute("listadoHabitaciones", listadoHabitacion);
    request.getRequestDispatcher("/ListadoHabitaciones.jsp").forward(request, response);
}

private void cargarFormularioRegistro(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    List<Tipohabitacion> listaTiposHabitacion = tipoHabitacionDAO.findAll();
    List<Estadohabitacion> listaEstadosHabitacion = estadoHabitacionDAO.listaEstadoHabitacion();

    request.setAttribute("listaTiposHabitacion", listaTiposHabitacion);
    request.setAttribute("listaEstadosHabitacion", listaEstadosHabitacion);

    request.getRequestDispatcher("/RegistrarHabitacion.jsp").forward(request, response);
}

protected void doPost(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {

    // Recoger parámetros del formulario
    String idTipoStr = request.getParameter("idtipo");
    String precioStr = request.getParameter("pre");
    String comodidades = request.getParameter("comodidades");
    String idEstadoStr = request.getParameter("est");

    int idTipo = Integer.parseInt(idTipoStr);
    double precio = Double.parseDouble(precioStr);
    int idEstado = Integer.parseInt(idEstadoStr);

    Tipohabitacion tipohabitacion = tipoHabitacionDAO.findTipohabitacionById(idTipo);
    Estadohabitacion estadohabitacion = estadoHabitacionDAO.findEstadohabitacionById(idEstado);

    Habitacion habitacion = new Habitacion();
    habitacion.setTipohabitacion(tipohabitacion);
    habitacion.setEstadohabitacion(estadohabitacion);
    habitacion.setPrecio(precio);
    habitacion.setComodidades(comodidades);

    habitacionDAO.RegistrarHabitacion(habitacion);

    listarHabitaciones(request, response);
}
